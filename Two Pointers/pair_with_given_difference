Given an one-dimensional unsorted array A containing N integers.

You are also given an integer B, find if there exists a pair of elements in the array whose difference is B.

Return 1 if any such pair exists else return 0.
Example Input
Input 1:

 A = [5, 10, 3, 2, 50, 80]
 B = 78
Input 2:

 A = [-10, 20]
 B = 30


Example Output
Output 1:

 1
Output 2:

 1

int Solution::solve(vector<int> &A, int b) {
    sort(A.begin(), A.end());
    int i=0;
    int j=1;
    int n=A.size();
    if(n==1) return 0;
    if(n==2) return (A[1]-A[0]) == b;
    while(i<n && j<n){
        if(i != j && A[j]-A[i] == b) return 1;
        else if(A[j]-A[i] > b){
            i++;
        }
        else{
            j++;
        }
    }
    return 0;
}
